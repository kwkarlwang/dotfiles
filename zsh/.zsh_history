wd
rm -rf ~/.vimrc
vifm
cd $(fzf)
ls -G
sh -c "ls"
ls --help
sh "ls -h"
source ~/.zshrc.backup
icat $(fzf)
cd emacs
vim $(fzf)
vim zsh-prompt
time kitty bash -c exit
time open -n /Applications/Alacritty.app
time open -n /Applications/Alacritty.app -e 
time open -n /Applications/Alacritty.app -e "echo 'hello'"
time open -n /Applications/Alacritty.app 
time open -n /Applications/kitty.app
neofetch 
kitty list-fonts
ls -h
kitty +kitten ssh
kitty +kitten ssh TuSimple
cd UCSD
zsh
conda init
which shell
echo $0
icat logo.png
tree ~/dotfiles
doom
ssh TuSimple
dotfiles
vim gpu_pod
kubectl get_pods
kubectl get logs karl-job-d8z5s
kubectl logs karl-job-d8z5s
kubectl delete karl-job
kubectl get jobs.batch
cd /data/karl/AdaBins-1/
kubectl gpu-container@karl
cd .k
ls -l
vim install_Pytorch3D_Dockerfile.txt
ls config
kubectl logs karl-job-77nwr
kubectl logs karl-job-kqtps
conda create -h
kubectl logs karl-job-kx46m
kubectl logs
kubectl delete jobs.batch karl-job
git clone https://gitlab.nrp-nautilus.io/jiacheng/nautilus.git
vim nautilus
docker 
docker ls
docker build
docker build ./Dockerfile
tldr docker
docker build .
git remote
git remote -h
rm -rf .git
git remote add origin git remote add origin https://gitlab.nrp-nautilus.io/kwkarlwang/nautilus.git
git remote add origin https://gitlab.nrp-nautilus.io/kwkarlwang/nautilus.git\

rm -rf .kite
cd .keras
ls datasets
rm -rf .keras
kubectl exec karl2 -it bash
conda install -c
docker build . -t pytorch3d:latest 
docker exec pytorch
docker exec pytorch -it bash
docker exec pytorch3d -it bash
docker exec pytorch3d:latest -it bash
docker run pytorch3d -it bash
docker run -it pytorch3d:latest bash
docker push gitlab-registry.nautilus.optiputer.net/kwkarlwang/docker-images:sgb
docker push gitlab-registry.nautilus.optiputer.net/kwkarlwang/docker-images:
fzf
cd Desktop/Karl
cd Master
docker login gitlab-registry.nautilus.optiputer.net
docker images
docker build -t gitlab-registry.nautilus.optiputer.net/kwkarlwang/docker-images:pytorch3d_kwkarlwang .
docker push gitlab-registry.nautilus.optiputer.net/kwkarlwang/docker-images:pytorch3d_kwkarlwang
docker login gitlab-registry.nrp-nautilus.io
docker build -t gitlab-registry.nrp-nautilus.io/kwkarlwang/nautilus .
docker push gitlab-registry.nrp-nautilus.io/kwkarlwang/nautilus
kubectl delete karl karl2
kubectl delete pods karl karl2
docker -h
kubectl -h
kubectl logs karl
kubectl describe pod karl
cd ~/.kube
kubectl create -f gpu_pod.yaml
kubectl describe pod karl2
kubectl delete pods karl2
cd nautilus
tldr apt
tldr apt-get
kubectl delete pods karl-job-pfgkm
vim Dockerfile
docker rmi pytorch3d 
docker rmi gitlab-registry.nautilus.optiputer.net/kwkarlwang/docker-images
docker rmi gitlab-registry.nautilus.optiputer.net/kwkarlwang/docker-images:pytorch3d_kwkarlwang
kubectl exec karl -it bash
kubectl describe pod karl-job-r5dgk
kubectl logs karl-job-r5dgk
kubectl create -f gpu_job.yaml
sch
cd srip/nautilus
k describe pod karl-job-bs2-sjl6v
k log karl-job-bs2-sjl6v
k logs karl-job-bs2-sjl6v
k describe pod karl-job-bs2-7ksfb
k logs karl-job-bs2-7ksfb
kubectl get pods
k exec karl-job-bs2-7ksfb
k exec karl-job-bs2-7ksfb -it bash
k exec karl-job-r5dgk -it bash
k describe pod karl
k delete jobs.batch karl-job-bs2
cd conf
emacs -nw .zshrc
vim .zimrc
cd anaconda3/etc/profile.d
vim conda.sh
cd .config/zsh
vim .zshrc
vim .config/zsh/.zshrc
emacs -nw AdaBins-1
k logs karl-job-6m9r4
k logs karl-job2-c5gw5
k delete pods karl2
kitty --single-instance
k describe pod karl-job-g2b62
k describe pod karl-job-vbdm8
k describe pod karl-job-z7d4n 
k logs karl-job-n7rcm
k logs karl-job-z7d4n
k describe pod karl-job-64jw7
k logs karl-job-64jw7
ls -a ~
k logs karl-job-6ggjz
k logs karl-job-s5ltl
cd .config/kitty/
vim kitty.conf
ls ~/.con
mkdir surfingkeys
cd surfingkeys
brew list 
brew list | grep -i vim
brew upgrade neovim
vim config.js
cd ../../..
git add surfingkeys
cd do
echo $INSIDE_EMACS
git remote add origin https://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@github.com/kwkarlwang/dotfiles.git
git pull https://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@github.com/kwkarlwang/dotfiles.git
k describe pod karl-job-8gpu-t6zsj 
k delete jobs.batch karl-job karl-
k describe pod siyuan-train-baseline-vpt-4gpu-bs6-bwpfv
k logs siyuan-train-baseline-vpt-4gpu-bs6-bwpfv
k logs karl-job-8gpu-5rgm6
k delete jobs.batch karl-job-8gpu
k logs karl-job-sd5cw
k describe pod karl-job-lk7rl
k logs karl-job-4phgh
git remote add origin https://github.com/kwkarlwang/AdaBins-1.git
git push origin master
git remote remove origin
git remote add origin https://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@github.com/kwkarlwang/AdaBins-1.git
git push origin main
k get pod
tldr tensorboard
k describe pod karl-job-lvgtz gpu_job.ya
k describe pod karl-job-lvgtz 
k logs karl-job-57gjh
k logs karl-job-jnfxb
k logs karl-job-5c5mm
k 
k logs karl-job-fvw6s
k logs karl-job-jrb44
k logs karl-job-6pfpx
k logs karl-job-z8q86
k logs karl-job-26hdt
k describe pod karl-job-57gjh
k describe pod karl-job-26hdt
git add dotfiles/surfingkeys/.config/surfingkeys/config.js 
vim dotfiles/surfingkeys/.config/surfingkeys/config.js 
k logs karl-job-tm6q6
k describe pod karl-job-tm6q6
k logs karl-job-66jv7
k logs karl-job2-8tqp4
k delete karl-job
emacs -nw .
vim .config/zsh/.zim/modules/asciiship 
brew unlink neovim
brew link neovim
brew uninstall nvim
brew update
brew outdated
brew upgrade
rm -rf /usr/local/Cellar/ghostscript/9.52/
chown -R MyUser:staff /usr/local/Cellar/ghostscript
whoami
chown -R kwkarlwang:staff /usr/local/Cellar/ghostscript
sudo rm -rf /usr/local/Cellar/ghostscript/9.52
brew cleanup
sudo curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\

python3 get-pip.py
rm get-pip.py
mv ~/.config/nvim/ ~/.config/nvim_old
cd nvim_old
ls ~/dotfiles
ls ~/dotfiles/vim
ls ~/dotfiles/vim/.config
git clone https://github.com/ChristianChiarulli/nvcode-color-schemes.vim ~/.local/share/nvim/site/pack/packer/opt/nvcode-color-schemes.vim\
\
\
rm 0
rm -r .config/nvim
rm -rf .config/nvim
rm -rf ~/.cache/nvim
sudo bash <(curl -s https://raw.githubusercontent.com/ChristianChiarulli/lunarvim/master/utils/installer/install.sh)\

mkdir ~/.local/share/nvim
rm -rf ~/local/share/nvim
git clone https://github.com/ChristianChiarulli/nvcode-color-schemes.vim ~/.local/share/nvim/site/pack/packer/opt/nvcode-color-schemes.vim\

npm i -g tree-sitter-cli
npm i -g --force tree-sitter-cli
pip3 install ueberzug neovim neovim-remote pynvim --user\

rm -rf ~/.local/share/nvim
rm -rf .config/nvim\

mv .config/nvim_old .config/nvim
mv .config/nvim dotfiles/vim
mkdir .config
mv nvim .config
vim ~/.config/nvim/init.vim
emacs -nw 
cd Desktop/Master/srip
kitty --single-instance --cwd=current
kitty 
vim .config/zsh/.zimrc
zimfw -h
emacs -nw ~/.config/kitty/kitty.conf 
kitty new_os_window_with_cwd
time repeat 100 kitty -1 sh -c exit:   10s (100ms startup time)\

time repeat 100 kitty -1 sh -c exit\

time repeat 100 kitty sh -c exit\

k logs siyuan-train-baseline-vpt-4gpu-bs6-wandb-v2fpp
k logs siyuan-train-baseline-vpt-4gpu-bs6-wandb-k2mq7
ls\

k logs karl-job2-fmh2n
k delete jobs.batch karl-job2 Applications
k port-forward -h
k port-forward karl 8888 8888
cd FinalProject
git reset --hard
./scripts/getnyu.sh
cd data/NYUD_MT
cd depth
icat train_0.npy
brew search htim
brew uninstall htop
git clone https://gitlab.com/thelinuxguy9/htim.git
./autogen.sh&& ./configure && make
htim
make install
/usr/local/bin/htop
brew install ncurses
brew uninstall ncurses && brew install ncurses
brew uninstall --ignore-dependecies ncurses && brew install ncurses
brew uninstall --ignore-dependencies ncurses && brew install ncurses
cd htim
rm -rf /usr/local/bin/htop
rm -rf htim
brew install htop
brew link --overwrite htop
r 
w
icat
rm .config/nvim
ls .config
bash <(curl -s https://raw.githubusercontent.com/ChristianChiarulli/lunarvim/stable/utils/installer/install.sh)\

vim lv-config.lua
ls lua/plugins.lua 
rm -rf .local/share/nvim/site/pack/packer/start/packer.nvim
cd dotfiles/vim
k delete jobs.batch karl-job2
k describe pod karl-job-vw9f8
k logs karl-job-vw9f8
k logs karl-job-s67z8
emacs -h
kitty + list-fonts --psnames | grep Fira
kitty + list-fonts --psnames | grep -i Nerd
kitty + list-fonts --psnames 
brew uninstall font-fira-code-nerd-font
brew install --cask font-fira-code-nerd-font
curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin\

vim .config/alacritty/dracula.yml 
ls | grep -i nyu
cd cse251b
cd FinalProject/data/NYUD_MT
cat train_0.jpg
brew services restart skhd
ls ~/.config
ls yabai
ls -a yabai
ls ~/.yabairc
ls ~/.skhdrc
brew services stop skhd
tldr find
icat train_19.jpg
icat train_20.jpg
icat train_21.jpg
icat train_18.jpg
icat train_17.jpg
icat train_12.jpg
ope n.
cd scripts
cat getnyu.sh
cd NYU_data
zip NYUD_MT
zip -r nyu.zip NYUD_MT
cd NYUD_MT
cd segmentation
tldr zip
tldr unzip
/usr/local/Cellar/emacs-mac/emacs-27.2-mac-8.2/Emacs.app/Contents/MacOS/Emacs ; exit;
rm ~/.config/nvim
bash <(curl -s https://raw.githubusercontent.com/ChristianChiarulli/lunarvim/master/utils/installer/install.sh)
rm -R ~/.config/nvim
rm -Rf ~/.local/share/nvim
rm -R ~/.cache/nvim
brew install lua node yarn ripgrep fzf ranger
brew link --overwrite node
pip3 install ueberzug neovim neovim-remote pynvim --user
pip3 install ueberzug neovim neovim-remote pynvim 
git clone https://github.com/wbthomason/packer.nvim ~/.local/share/nvim/site/pack/packer/start/packer.nvim\

rm -rf ~/.config/nvim
git clone https://github.com/ChristianChiarulli/lunarvim.git ~/.config/nvim\

nvim
vim -v
pip3 uninstall neovim
brew uninstall --force neovim
brew install --HEAD neovim
git pull
ls ftdetect
ls utils
touch lv-config.lua
rm -rf ~/.local/share/nvim/site/pack
vim\
\
\
\
\
\
pac
vim .config/nvim/lua/plugins.lua
nvim -u $HOME/.config/nvim/init.lua +PackerInstall\

rm -rf ~/.config/nvim\

bash <(curl -s https://raw.githubusercontent.com/ChristianChiarulli/lunarvim/master/utils/installer/install.sh)\
\

rm -rf ~/.local/share/nvim/site\
\

brew reinstall luarocks
brew -h
brew doctor
echo $PATH
vim ~/.config/zsh/.zshrc
brew link --overwrite docker openexr c-blosc universal-ctags 
brew uninstall python@3.9 numpy@1.16
brew link --overwrite python@3.9 numpy@1.16
echo $XDG_CONFG_HOME
echo $XDG_CONFiG_HOME
echo $XDG_CONFIG_HOME
vim plugin
cat packer_compiled.vim
vim packer_compiled.vim
ls lua
rm -rf lua/lv-galaxyline
rm -rf nvim
rm -rf .local/share/
echo $XDG_DATA_HOME
sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \\
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
rm -rf ~/.local/share/nvim/site/pack/start/
rm -rf ~/.local/share/nvim/site/pack/packer
git clone https://github.com/wbthomason/packer.nvim ~/.local/share/nvim/site/pack/packer/start/packer.nvim
brew uninstall --force luajit
brew install --HEAD luajit
mkdir lua
rm -rf lua
brew install lua
brew reinstall lua
ls plugged
lsa
brew uninstall neovim
brew install neovim
nvim init.vim
emacs -nw init.vim
npm -h
npm remove neovim
npm uninstall neovim
vim ece276b/ECE276B_PR3/starter_code/main.py 
brew install tree-sitter luajit 
brew uninstall luajit
brew install luajit
mkdir after
brew link luajit
brew upgrade luajit
which emacs
/usr/local/Cellar/emacs-mac/emacs-27.2-mac-8.2/Emacs.app/
open -n /usr/local/Cellar/emacs-mac/emacs-27.2-mac-8.2/Emacs.app/
/usr/local/bin/emacs
/usr/local/Cellar/emacs-mac/emacs-27.2-mac-8.2/Emacs.app/Contents/MacOS/Emacs 
vim splits.mat
cd indoor_scene_seg_sup
ls support
l support
l segmentation
l structure_classes
rm -rf indoor_scene_seg_sup indoor_scene_seg_sup.zip
ld
cd toolbox_nyu_depth_v2
rm -rf toolbox_nyu_depth_v2
ls *.mat
open nyu_depth_v2_labeled.mat
cd mas
tmux =h
tmux rm -t 0
tmux delete -t 0
tmux delete 0
k exec karl -- -it bash
vim token.txt
pip list | grep -i torch
k get jobs.batch
k logs karl-job-mj98z
kitty -l
kitty -1
git clone https://github.com/bitbrute/evillimiter.git
sudo python3 setup.py install
which evillimiter
evillimiter scan
brew install tc iptables
evillimiter -h
cd evillimiter
pip uninstall evillimiter
sudo pip uninstall evillimiter
rm -rf evillimiter
sudo rm -rf evillimiter
ipfw
docker pull kalilinux/kali-rolling
docker run -t -i kalilinux/kali-rolling /bin/bash
docker ps
docker image rm fd04ffa906e4
docker image rm -f fd04ffa906e4
docker image rm -f 0a08156f29d3
docker image ls
vim kickthemout
sudo python kickthemout.py 
cd kickthemout
sudo python kickthemout.py -s
sudo python kickthemout.py -h
sudo python kickthemout.py -t 192.168.1.19
fg ; /usr/local/Cellar/emacs-mac/emacs-27.2-mac-8.2/Emacs.app/Contents/MacOS/Emacs --restore -nw
k port-forward karl 8888:8888
doom help
doom purge
doom compile
k logs karl-job-8dwbs
k logs karl-job-x8xc4
k logs karl-job-2gk4q
k logs karl-job-5jpsc
k create
k logs karl-job-7852s 
k logs karl-job-ss8bx
k logs karl-job-6xw8x
k logs karl-job-xkndg
pip | grep -i flask
pip list | grep -i flask
pip =h
pip -h
pip install -U flask
pip install ruamel-yaml
export FLASK_APP=hello
flask run hello
vim ~/.config/kitty/kitty.conf 
python train.py args_train_nyu.txt
flask run 
export FLASK_APP=main
flask run
k logl
k logs karl-job-tpmzg
k logs karl-job-ls7wp
k logs karl-job-smsrt
k delete jobs.batch karl-job && k create -f gpu_job.html
k logs karl-job-drvk8
k logs karl-job-5bfgr
k get podsl
k delete jobs.batch karl-job && k create -f gpu_job.yaml
k logs job.batch/karl-job
k delete jobs.batch karl-job
k describe jobs.batch karl-job-0.3
k describe pod karl-job-0.3-wmhwn
brew uninstall emacs
brew uninstall emacs-mac
brew tap d12frosted/emacs-plus
brew install emacs-plus@28 --with-no-frame-refocus --with-no-titlebar --with-native-comp --with-elrumo2-icon
cd /data/karl/
mv AdaBins-1 srip-adabins
vim args_train_nyu.txt
git push origin seg
k exec -it karl-job-0.3-hcbf6 nvidia-smi
k exec -it karl-job-0.3-hcbf6 htop
brew uninstall emacs-plus
k exec -it karl-job-0.3-62tnj htop
rm /Applications/Emacs.app
doom build
k exec -it job.batch/karl-job-0.3 conda list
k exec -it job.batch/karl-job-0.3 conda env
k exec -it job.batch/karl-job-0.3 conda env list
open /Applications/Emacs.app
open -h
open -a /Applications/Emacs.app
open -b /Applications/Emacs.app
>htop
cd .emacs.d
ls ../build-27.2
cd pdf-tools/build/server
brew reinstall poppler
echo $PKG_CONFIG
vim configure
echo $PKG_CONFIG_LIBDIR
brew install libpng
cp -r ../../build-27.2/pdf-tools/build .
rm -rf build
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
rm -rf pdf-tools
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/Cellar/libpng/1.6.37/lib/pkgconfig
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/Cellar/libpng/1.6.37/lib/pkgconfig:/opt/X11/lib/pkgconfig
brew link
brew link -n
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/Cellar/libpng/1.6.37/lib/pkgconfig:/opt/X11/lib/pkgconfig:/usr/local/Cellar/zlib/1.2.11/lib/pkgconfig
./configure && make clean && make -s
make clean
./autobuild -i
pkg-config --libs poppler
brew install --HEAD dunn/homebrew-emacs/pdf-tools
/Users/kwkarlwang/.emacs.d/.local/straight/build-28.0.50/pdf-tools/build/server/autobuild -i /Users/kwkarlwang/.emacs.d/.local/straight/build-28.0.50/pdf-tools/\

fg
vim /Users/kwkarlwang/.config/zsh/.zshrc 
doom clean
/Applications/Emacs.app/Contents/MacOS/Emacs
autoreconf -i 
brew install perl
cd .emacs.d/.local/straight/build-28.0.50/pdf-tools
cd build
cd server
autoreconf -i
brew install pkg-config poppler automake libtool libpng
brew reinstall pkg-config poppler automake libtool libpng
./autobuild -i /Users/kwkarlwang/.emacs.d/.local/straight/build-28.0.50/pdf-tools/ --os 
./autobuild -i /Users/kwkarlwang/.emacs.d/.local/straight/build-28.0.50/pdf-tools/ --os mac
./autobuild -i /Users/kwkarlwang/.emacs.d/.local/straight/build-28.0.50/pdf-tools/ --os macos
./autobuild -i /Users/kwkarlwang/.emacs.d/.local/straight/build-28.0.50/pdf-tools/ --os nixos
autoconf -p
sudo echo "/usr/local/Cellar/pkg-config/0.29.2_3/share/aclocal" >> /usr/local/Cellar/automake/1.16.3_1/share/aclocal/dirlist
sudo vim /usr/local/Cellar/automake/1.16.3_1/share/aclocal/dirlist
cd .doom.d
git clone --depth=1 -b master https://github.com/manateelazycat/emacs-application-framework.git ~/.emacs.d/site-lisp/emacs-application-framework/\

cd ~/.emacs.d/site-lisp/emacs-application-framework
git clone https://github.com/manateelazycat/emacs-application-framework.git
git restore --source=HEAD
git restore --source=HEAD :/
git restore --source=HEAD ./
chmod +x ./install-eaf-mac.sh
./install-eaf-mac.sh
cd .local/straight/build-28.0.50
cd straight
cd repos
cd /Users/kwkarlwang/.emacs.d/.local/straight/repos/emacs-application-framework/
mkdir emacs-application-framework
ls emacs-application-framework
mv ../../../site-lisp/emacs-application-framework emacs-application-framework
cd emacs-application-framework
mv emacs-application-framework/* ./
rm -rf emacs-application-framework
brew style --fix
brew tap dunn/emacs
brew install pdf-tools --HEAD
tree | grep -i pdf
tree | grep -i pdf-tools
cd straight/l
cd straight/
cd build-28.0.50
cd pdf-tools
cd build/server
emacs --daemon
brew uninstall poppler
brew install poppler
echo $poppler_CFLAGS
./configure -q --bindir=/Users/kwkarlwang/.emacs.d/.local/straight/build-28.0.50/pdf-tools/ &&\
make clean && make -s\

export PKG_CONFIG_PATH=/usr/local/Cellar/zlib/1.2.11/lib/pkgconfig:/usr/local/lib/pkgconfig:/opt/X11/lib/pkgconfig
autoreconf -i -f
./configure -q --bindir=/Users/kwkarlwang/.emacs.d/.local/straight/build-28.0.50/pdf-tools/ && make clean && make -s
./configure -q --bindir=/Users/kwkarlwang/.emacs.d/.local/straight/build-28.0.50/pdf-tools/ 
make -s
brew tap elijah/emacs
brew tap elijah/homebrew-emacs
echo $PKG_CONFIG_PATH
port selfupdate
sudo port selfupdate
port install poppler
sudo port install poppler
source ~/.config/zsh/.zshrc
./autobuild
make clean all
./autobuild -i /Users/kwkarlwang/.emacs.d/.local/straight/build-28.0.50/pdf-tools/ 
open /Applications
k exec karl 
k exec -it job.batch/karl-job-0.3 ls
k exec -it job.batch/karl-job-0.3 pwd
k exec -it job.batch/karl-job-0.3 htop
k logs karl-job-0.3-mjwzp
k logs pods karl
k logs karl
k exec -it karl
watch -n 1
k logs karl-job-0.3-2-8kk7k
k delete jobs.batch karl-job-0.3-2
k logs job.batch/karl-job-0.3-2
k exec -it job.batch/karl-job-0.3-2 nvidia-smi
k exec -it job.batch/karl-job-0.3 cat /data/karl/srip-adabins/train.py
k exec -it job.batch/karl-job-0.3 cat /data/karl/srip-adabins/args_train_nyu.txt
k exec -it job.batch/karl-job-0.3 lscpu
k logs job.batch/8-karl-job-0.3
k delete jobs.batch 8-karl-job-0.3
k logs job.batch/karl-job-0.3
k logs job.batch/karl-job-0.3-job
k describe pod karl-job-0.3
k exec -it job.batch/karl-job-0.3 nvidia-smi
k logs job.batch/karl-job-0.3-log
k logs job.batch/karl-job-0.5-log
k logs job.batch/karl-job-0.8-log
k logs job.batch/karl-job-1-log
k delete jobs.batch karl-job-0.3
k delete jobs.batch karl-job-0.5
k delete jobs.batch karl-job-0.8
k delete jobs.batch karl-job-0.3-log
k delete jobs.batch karl-job-0.5-log
k delete jobs.batch karl-job-0.8-log
k delete jobs.batch karl-job-0.1-log
k delete jobs.batch karl-job-1-log
k exec -it job.batch/karl nvidia-smi
k exec -it job.batch/karl htop
k exec -it job.batch/karl top
k logs job.batch/karl
k logs karl-kgv5m
k exec -it job.batch/job-karl-0.3 htop
k logs job.batch/job-karl-0.3-6
k delete jobs.batch job-karl-0.3-6
k delete jobs.batch job-karl-0.3-8
defaults write NSGlobalDomain KeyRepeat -int 0\
\

k logs job-karl-1-zhwx2
python utils.py
k logs job-karl-0.1-wrtjt
k delete jobs.batch job-karl-0.1
k delete jobs.batch job-karl-0.1-2
vim gpu_job.yaml
k logs job.batch/job-karl-1
k logs job.batch/job-karl-0.3
k logs job.batch/job-karl-0.1
k exec -it job.batch/job-karl-0.3 nvidia-smi
k exec -it job.batch/job-karl-0.1 htop
brew resintall tmux
brew reintall tmux
brew reinstall tmux
k delete jobs.batch job-karl-0.3
k exec -it job.batch/job-karl-0.1 nvidia-smi
tmux sl
curl -LO http://invisible-island.net/datafiles/current/terminfo.src.gz\

gunzip terminfo.src.gz\

tic -x terminfo.src\

vim .config/nvim/.tmux.conf 
rm .config/nvim/.tmux.conf 
vim ~/.tmux.conf
vim .config/nvim/init.vim 
tic -h
vim ~/terminfo.src
touch ~/.terminfo
vim ~/terminfo-24bit.src
chmod 777 ~/.terminfo
chmod 777 terminfo-24bit.src
tic -x -o ~/.terminfo terminfo-24bit.src\

cat ~/.terminfo
sudo tic -x -o ~/.terminfo terminfo-24bit.src\

TERM=xterm-24bit emacs -nw
rm -rf ~/.terminfo
rm -rf terminfo-24bit.src
TERM=xterm-direct infocmp | grep seta[bf]
TERM=xterm-direct emacs -nw
tmux --version
brew list | grep -i tmux
k exec -it job.batch/job-karl-3 nvidia-smi
git clone https://github.com/wbthomason/packer.nvim\\
 ~/.local/share/nvim/site/pack/packer/start/packer.nvim\

cd dotfiles/
mkdir ftplugin
mkdir lua pack plugin syntax
git clone --depth=1 https://github.com/savq/paq-nvim.git \\
    "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/pack/paqs/start/paq-nvim\

vim init_old.vim
k logs job.batch/job-karl-3
defaults write -g InitialKeyRepeat -int 10 
defaults write -g KeyRepeat -int 1
k logs job.batch/job-karl-1-pretrain
k logs siyuan-train-adabins-w-seg-1-n2vqv 
cd .config/nvim
ls ~
cd ./\~
ls .vim
mv init.lua init_old.lua
mv init_old.vim init.vim
vim init.vim
mv init.vim init_old.vim
mv init_old.lua init.lua
rm -rf ./\~
cd ece276b
cd ECE276B_PR3
cd starter_code
k delete jobs.batch job-karl-0.1 job-karl-1 job-karl-1-pretrain job-karl-3
k delete jobs.batch job-karl-1
k logs job-karl-1-pretrain-nvm6h
k logs job-karl-1-pretrain-4pzrr
k exec -it job.batch/job-karl-1-pretrain nvidia-smi
k logs job-karl-1-pretrain-4qkpt
k logs job-karl-1-pretrain-bvdlv
k describe jobs.batch siyuan-train-adabins-w-seg-1
k logs karl-job-0.6-d4cxl
k logs karl-job-0.6-vnhms
brew install watch
watch -n 1 k get pods
git clone --recurse-submodules https://www.tnt.uni-hannover.de:3000/kluger/nyu_vp.git
git clone https://github.com/fkluger/nyu_vp
vim .config/zsh/.zimrc 
z nyu
ls $HOME
la -a
la
ll
cd \$HOME
ls data
python nyu.py --mat_file nyu_depth_v2_labeled.mat
conda -h
conda install -h
k delete jobs.batch job-karl-1-pretrain
cat terminfo.src
vim terminfo.src
tree .terminfo
ls .terminfo
cd .terminfo
cd 78
cat xterm-24bit
cat xterm-24bits
cd models
python unet_adaptive_bins.py
python main.py
cd data
vim vps_1430.csv
vim labelled_lines_1401.csv
l 
l | grep -i vps | wc
z nyu_vp
vim nyu.py
brew install emacs-plus@28 --with-native-comp --with-elrumo2-icon
z cse252a
cd cse252a
ln -s /usr/local/opt/emacs-plus@28/Emacs.app /Applications
brew services start d12frosted/emacs-plus/emacs-plus@28
rm -rf \$HOME
vim ~/.ssh/config
/usr/local/Cellar/emacs-plus@28/28.0.50/Emacs.app/Contents/MacOS/Emacs ; exit;
awk 'BEGIN{\
    s="/\\/\\/\\/\\/\\"; s=s s s s s s s s;\
    for (colnum = 0; colnum<77; colnum++) {\
        r = 255-(colnum*255/76);\
        g = (colnum*510/76);\
        b = (colnum*255/76);\
        if (g>255) g = 510-g;\
        printf "\033[48;2;%d;%d;%dm", r,g,b;\
        printf "\033[38;2;%d;%d;%dm", 255-r,255-g,255-b;\
        printf "%s\033[0m", substr(s,colnum+1,1);\
    }\
    printf "\n";\
}'
git clone https://github.com/wbthomason/packer.nvim\\
 ~/.local/share/nvim/site/pack/packer/start/packer.nvim
tree
tree -1
tree -d 1
tree -h | grep -i depth
tree 
l ftplugin
l after
l lua
l pack
l plug
l plugged
rm -rf plugged
l plugin
l syntax
ls .local/
ls .local/share/nvim
ls .local/share/nvim/site
ls .local/share/nvim/site/pack
ls .local/share/nvim/site/pack/paqs
ls .local/share/nvim/site/pack/paqs/opt
ls .local/share/nvim/site/pack/paqs/opt/st
ls .local/share/nvim/site/pack/paqs/start
s
vim settings.lua
ls pack
mkdir plugins
vim compe.lua
cd ../..
cd ~/.config/nvim
git clone https://github.com/kwkarlwang/vim.git
mv vim dracula
emacs dracula
cd ls
emacs -nw .config/kitty/kitty.conf 
cd .
cd leetcode
leetcode show 210
tldr leetcode
leetcode 210
leetcode cache
leetcode cache 210
leetcode show 210 -e -l python3 
leetcode show 210 -g -l python3 
vim 210.course-schedule-ii.py
leetcde -h
leetcode -h
node --trace-warnings
leetcode login
leetcode test 210.course-schedule-ii.py
leetcode submit 210.course-schedule-ii.py
python 210.course-schedule-ii.py
cd srip-adabins
cd train_test_inputs
vim nyudepthv2_train_files_with_gt.txt
cd nvim
rm -rf dracula
cd plugin
cd plugins
vim lualine.lua
mv vim-dracula vim
z srip-adabins
git brnach
git branch
cat main.py
python3 main.py
git add .
git status
gs
git commit -m "fix"
git push origin seg_siyuan_karl 
k logs karl-job-0.6-zdbvv
k logs karl-job-0.6-krmhl
vim gpu_pod.yaml
k logs karl-job-0.6-6rnv5
k describe jobs.batch karl-job-0.6
k exec -it job.batch/karl-job-0.6 nvidia-smi
k logs karl-job-0.6-fl4rf
kitty launch
kitty launch 1
kitty launch --cwd=current
kitty --cwd=current
kitty -d=cwd
kitty -h
kitty -d=$(pwd)
vim .config/kitty/macos-launch-services-cmdline 
kitty
brew search jetbrains
brew install font-jetbrains-mono-nerd-font
vim .config/nvim/init.lua 
ls htop
cd htop
rm htop
ls scripts
cd kitty
git clone https://github.com/jktr/matplotlib-backend-kitty.git
stow 
stow */
cd matplotlib-backend-kitty
echo $PYTHONPATH
python -i
ipython -i
jupyter
jupyter qtconsole
jupyter-qtconsole
echo MPLBACKEND
echo $MPLBACKEND
echo $TERM
mas 
cd srip/
cd images
icat train_0.jpg
icat train_1.jpg
icat train_2.jpg
icat val_0.jpg
vim dotfiles/emacs/.doom.d/init.el 
doom upgrade
defaults read org.gnu.Emacs TransparentTitleBar
defaults delete org.gnu.Emacs TransparentTitleBar\

defaults write org.gnu.Emacs TransparentTitleBar DARK
defaults read | grep -i emacs
emacs
emacsclient
emacsclient -h
defaults read 
defaults delete org.gnu.Emacs "NSWindow Frame NSFontPanel"\

defaults delete org.gnu.Emacs 
defaults read org.gnu.Emacs 
emacs -Q
vim main.py
k delete jobs.batch karl-job-0.6
k delete jobs.batch karl
k exec karl -it bash
z .kube
brew install --cask monitorcontrol
brew services list
k create -f gpu_job.yaml
vim gpu_job.yaml 
brew tap homebrew/cask-fonts\

brew install --cask font-jetbrains-mono
vim .config/zsh/.zim/modules/zsh-completions/src 
open srip
doom env
git clone https://github.com/saeid-h/bts-fully-tf.git
mkdir dataset
mkdir nyu_depth_v2
mkdir official_splits
cd ../../
cd bts-fully-tf
cd utils
cd sripi
cd srip
cd nyu_vp
cat nyudepthv2_archives_to_download.txt
cat kitti_archives_to_download.txt
cat train_scenes.txt
cp -r ../../nyu_vp/nyu_depth_v2_labeled.mat ./
wget http://horatio.cs.nyu.edu/mit/silberman/nyu_depth_v2/nyu_depth_v2_labeled.mat
rm -rf nyu_depth_v2_labeled.mat
cd ../../../
cd cse251b/FinalProject/data/NYUD_MT/
watch -n 1 kubectl get pods
open
python3 extract_official_train_test_set_from_mat.py nyu_depth_v2_labeled.mat splits.mat ../../dataset/nyu_depth_v2/official_splits/
which pip
which python2
python2 -m pip install h5py
python2 extract_official_train_test_set_from_mat.py nyu_depth_v2_labeled.mat splits.mat ../../dataset/nyu_depth_v2/official_splits/
python2 -m pip install cv2
z utils
vim extract_official_train_test_set_from_mat.py
python extract_official_train_test_set_from_mat.py nyu_depth_v2_labeled.mat splits.mat ../../dataset/nyu_depth_v2/official_splits/
cd dataset
cd nyu_depth_v2
cd official_splits
cd train
cd bedroom
ipython
jupyter qtconsole &
tmux source ~/.tmux.conf
emacs -nw
brew services start skhd
brew services stop yabai
brew services start yabai
brew services restart yabai
ssh\
\
\
\

emacs 
z NYUD_MT
z srip
mv adabisn.pdf adabins.pdf
open adabins.pdf 
z official_splits
open .
k exec -it job.batch/karl-job-3 nvidia-smi
k logs karl-job-3-8zpdk
ls Desktop
k create -f gpu_pod.yaml
k exec -it karl bash
pip install sphinx
mkdir test
cd test
sphinx-quickstart
make html
open build/html/index.html
ls source
vim source/index.rst
pandoc -f markdown -t org -o test.org DCTrip.md
pandoc -f org -t html -o test.html doc.org
pandoc -f markdown -t org -o test.org DCTrip.md -H pandoc.css
rm test.org
pandoc -f org -t html -o test.html doc.org -H pandoc.css
pandoc -f org -t html -o test.html doc.org -H pandoc.css -s
pandoc -s -S -A pandoc.html -f org -t html -o test.html doc.org 
pandoc -A pandoc.html -f org -t html -o test.html doc.org 
pandoc --toc -A pandoc.html -f org -t html -o test.html doc.org 
pandoc -A pandoc.html -f org -t html -o test.html doc.org --self-contained
pandoc -A pandoc.html -f org -t html+smart -o test.html doc.org --self-contained
open test
pandoc --template pandoc.html -f org -t html+smart -o test.html doc.org 
pandoc -H pandoc.html -f org -t html -o test.html doc.org --self-contained
pandoc -H pandoc.html -A pandoc.html -f org -t html -o test.html doc.org --self-contained
pandoc -H pandoc.html -s -f org -t html -o test.html doc.org --self-contained
pandoc -H pandoc.html -s -f org -t html -o test.html doc.org 
pandoc -H pandoc.html -s -f org -t html -o test.html DCTrip.md
pandoc -H pandoc.setup --self-contained -s -f org -t html -o test.html DCTrip.md
pandoc -H pandoc.setup --self-contained -s -f org -t html -o test.html DCTrip.org
open test.html
pandoc -H pandoc.setup -s -f org -t html -o test.html DCTrip.org
git pull origin master
npm i -g axios
node init
npm init
npm i axios
\:q
exit
cd Desktop
git clone https://github.com/kwkarlwang/tmux-dracula.git
vim tmux-dracula
z tmux-dracula
vim l
cd .config/nvim/
vim nvimforks
mkdir nvimforks
cd nvimforks
mv ~/Desktop/tmux-dracula ./
git clone https://github.com/kwkarlwang/vim-dracula.git
vim dotfiles/emacs/.doom.d/themes/dracula-theme.el 
cd .config
brew list | grep -i vifm
rm -rf vifm
git clone https://github.com/alexanderjeurissen/ranger_devicons ~/.config/ranger/plugins/ranger_devicons
ranger --copy-config=rfile.conf
ranger --copy-config=
ranger --copy-config=rc.conf
ranger --copy-config=rfile
vim zsh/.zshrc 
rangewr
brew install nnn
nnn
brew uninstall nnn
ranger --copy-config=all
npm i -g trash-cli
cd Downloads
vim scope.sh.txt
ragner
git clone https://github.com/lincheney/nvim-cat.git
vim nvim-cat
cd nvim-cat
..
nvim-cat
cargo build
rm -rf nvim-cat
git clone https://github.com/lucc/nvimpager.git
cd nvimpager
brew install luarocks
luarocks install busted
brew insatll scdoc
brew install scdoc
scdoc
make
nvimpager makefile
man ls
tmux 
vim dotfiles/kitty/.config 
vim .config/kitty/kitty.conf 
less -h
less
less -R
less -R 
less -R terminfo.src
brew install highlight
highlight
cd .config/ranger/
node main.js
python
sudo spctl --master-disable 
sudo touch /Library/Extensions/
brew list
brew list | grep -i emacs
brew uninstall emacs-plus@28
brew install emacs-plus@28
brew install emacs-plus@28 --with-no-frame-refocus --with-native-comp --with-elrumo2-icon
nvim ranger
z ranger
vim rc.conf
doom install
doom sync
npm i -g pyright
/usr/local/bin/node
brew install node
brew link node
brew link --overwrite node\

node
pip3 install pynvim
pip3 install ranger-fm
vim Desktop
cd pua
cd lua
z lua
vim plugins
brew install luafmt
luarocks install --server=https://luarocks.org/dev lua-fmt
luarocks list
luarocks -h
luarocks remove lua-fmt
npm i -g lua-fmt
git push -u origin master
git ls-files
vim plugins.lua
z skhdrc
vim .config/zsh/.zshrc 
vim .config/nvim/lua/plugins.lua 
cd .config/nvim/lua/
znvim
git push
brew install lazygit
rg
rg -h | grep -i ignore
vim zsh/.config/zsh/.zshrc 
vim .fzf.zsh
brew install bat
bat terminfo.src
rm coc-settings.json
ls ~/.vim
ls vim
ls -a vim/
l
l .tmux
ls ~/.tmux
ls .tmux.conf
l .tmux.conf
ls -a vim
cd vim
rm .DS_Store
stow vim
k -h
k config
k config current-context
k config get-users
k config view
k delete pods karl
k delete jobs.batch karl-job-3
ssh TuSimple 
vim .tmux.conf 
tmux
cd .kube
cd vim-dracula
ls vim-dracula
vim vim-dracula
rm -rf vim-dracula
ls after
ls ftplugin
tmux a | tmux
tmux a || tmux
python 841.keys_and_rooms.py 
python 813.largest_sum_of_averages.py
zsh -h
vim dotfiles/yabai/.skhdrc 
vim .config/alacritty 
tmux kill-server
tmux detach
cd .config/nvim-plugins/vim-dracula/
cd tmux-dracula
vim dracula.tmux
vim .config/alacritty/alacritty.yml 
cd .config/nvim-plugins/tmux-dracula/
neofetch
cd .config/alacritty/
tmux -h
tmux -u
tmux ls
export LANG="en_US.UTF-8"
locale
cd .config/
vim 
r
tmux a
clear
rm -rf ~/.emacs.d/.local/straight/build-27.2
doom doctor
brew install latexindent
cd Movies
k
\:wq
vim lua/plugins.lua 
cd ~/dotfiles
z nivm
vim
z nvim
htop
tldr rg
tldr fd
fd-h
fd -h
rg -h
vim init.lua
cd .config/zsh/
vim .
szsh
brew install starship\

zimfw -h 
zimfw clean
zimfw install
cd dotfiles
k get pods
cd 
mas
cd
ls -l | grep zprofile
ls -a grep zprofile
ls -a | grep zprofile
vim .zprofile
mv .zprofile dotfiles/zsh/
cd dotfiles/zsh
cd zsh
ls -a
cd ..
stow zsh
pwd
which python
which python3
ls
ranger
lazygit
: 1627277386:0;ssh TuSimple 
: 1627277505:0;ls -a
: 1627277513:0;ls -a | grep -i ssh
: 1627277516:0;ls .ssh
: 1627277532:0;vim .ssh/config
: 1627277548:0;ssh 10.160.66.66@karl.wang
: 1627277561:0;ssh 10.160.66.66@tusimple.ai
: 1627277595:0;ssh karl.wang@10.160.66.66
: 1627278717:0;ssh TuSimple
: 1627278744:0;z .ssh
: 1627278748:0;vim .ssh/config
: 1627278751:0;vim config
: 1627278862:0;whoami
: 1627278972:0;ssh karl.wang@sd-dub-54d092
: 1627279164:0;vim .ssh/config
: 1627280375:0;ranger
zimfw install
: 1627280721:0;lazygit
: 1627280992:0;zsh --version
: 1627281086:0;ranger
: 1627281248:0;lazygit
